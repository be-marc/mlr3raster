% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataBackendRaster.R, R/DataBackendVector.R,
%   R/as_task_classif.R, R/as_task_regr.R
\name{as_data_backend.stars}
\alias{as_data_backend.stars}
\alias{as_data_backend.SpatRaster}
\alias{as_data_backend.RasterBrick}
\alias{as_data_backend.Raster}
\alias{as_data_backend.sf}
\alias{as_task_classif.sf}
\alias{as_task_classif.SpatRaster}
\alias{as_task_regr.sf}
\alias{as_task_regr.stars}
\alias{as_task_regr.SpatRaster}
\alias{as_task_regr.RasterBrick}
\alias{as_task_regr.Raster}
\title{Coerce to spatial DataBackend}
\usage{
\method{as_data_backend}{stars}(data, primary_key = NULL, task_train = NULL, ...)

\method{as_data_backend}{SpatRaster}(data, primary_key = NULL, task_train = NULL, ...)

\method{as_data_backend}{RasterBrick}(data, primary_key = NULL, task_train = NULL, ...)

\method{as_data_backend}{Raster}(data, primary_key = NULL, task_train = NULL, ...)

\method{as_data_backend}{sf}(data, primary_key = NULL, ...)

\method{as_task_classif}{sf}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  positive = NULL,
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_classif}{SpatRaster}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  positive = NULL,
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_regr}{sf}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_regr}{stars}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_regr}{SpatRaster}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_regr}{RasterBrick}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  label = NA_character_,
  task_train = NULL,
  ...
)

\method{as_task_regr}{Raster}(
  x,
  target = NULL,
  id = deparse(substitute(x)),
  label = NA_character_,
  task_train = NULL,
  ...
)
}
\arguments{
\item{data}{(\link[terra:SpatRaster-class]{terra::SpatRaster})\cr
The input \link[terra:SpatRaster-class]{terra::SpatRaster}.}

\item{primary_key}{(\code{character(1)} | \code{integer()})\cr
Name of the primary key column, or integer vector of row ids.}

\item{task_train}{\verb{[mlr3::Task]}\cr
Task used for training the learner.}

\item{...}{(\code{any})\cr
Not used.}
}
\value{
\link{DataBackend}.
}
\description{
Wraps a \link{DataBackend} around spatial objects.
Currently these S3 methods are only alternative ways for writing \code{DataBackendRaster$new()} or \code{DataBackendVector$new()}.
They do not support coercing from other backends yet.
}
