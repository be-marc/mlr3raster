[{"path":"https://mlr3spatial.mlr-org.com/articles/benchmark.html","id":"small-files","dir":"Articles","previous_headings":"","what":"Small files","title":"Benchmarking parallel predictions","text":"~ 250k values 48 MB disk","code":"# SpatRaster demo stack stack_terra = demo_stack_spatraster(50) value = data.table::data.table(ID = c(0, 1), y = c(\"negative\", \"positive\")) terra::setCats(stack_terra, layer = \"y\", value = value) colnames = names(stack_terra) file_terra = tempfile(\"terra\", fileext = \".tif\") terra::writeRaster(stack_terra, file_terra)  # RasterBrick demo stack stack_raster = demo_stack_rasterbrick(50) colnames_raster = names(stack_raster) file_raster = tempfile(\"raster\", fileext = \".tif\") raster::writeRaster(stack_raster, file_raster) #> Warning in .gd_SetProject(object, ...): NOT UPDATED FOR PROJ >= 6  # tasks stack_terra = terra::rast(file_terra) backend_terra = DataBackendRaster$new(stack_terra) task_terra = as_task_regr(backend_terra, target = \"x_1\")  stack_raster = raster::brick(file_raster) names(stack_raster) = colnames_raster backend_raster = DataBackendRaster$new(stack_raster) #> Warning in wkt(from): no wkt comment task_raster = as_task_regr(backend_raster, target = \"x_1\")  # Train learners set.seed(42) row_ids = sample(1:task_terra$nrow, 50)  learner_task_terra = lrn(\"regr.rpart\") learner_task_terra$parallel_predict = TRUE learner_task_terra$train(task_terra, row_ids = row_ids)  learner_task_raster = lrn(\"regr.rpart\") learner_task_terra$parallel_predict = TRUE learner_task_raster$train(task_raster, row_ids = row_ids)  # non-mlr3 models rpart_task_terra = rpart::rpart(x_1 ~ ., task_terra$data(rows = row_ids)) rpart_task_raster = rpart::rpart(x_1 ~ ., task_raster$data(rows = row_ids)) bm = bench::mark(    \"01-mlr3-terra-4-cores\" = {     plan(multicore, workers = 4)     predict_spatial(task_terra, learner_task_terra, chunksize = 2000L)   },    \"02-terra-4-cores\" = terra::predict(stack_terra, rpart_task_terra, cores = 4, cpkgs = \"rpart\"),    \"03-mlr3-raster-4-cores\" = {     plan(multicore, workers = 4)     predict_spatial(task_raster, learner_task_raster, chunksize = 2000L, format = \"raster\")   },    \"04-raster-4-cores\" = {     library(raster)     library(rpart)     beginCluster(4, type = \"PSOCK\")     clusterR(stack_raster, predict, args = list(model = rpart_task_raster))   },    check = FALSE, filter_gc = FALSE, min_iterations = 3,   max_iterations = 3, memory = FALSE) #> Loading required package: sp #>  #> Attaching package: 'raster' #> The following object is masked from 'package:future': #>  #>     values #> The following object is masked from 'package:mlr3': #>  #>     resample  bm$`itr/sec` = NULL bm$result = NULL bm$`gc/sec` = NULL bm$memory = NULL bm$mem_alloc = NULL  print(bm) #> # A tibble: 4 × 8 #>   expression                  min   median n_itr  n_gc total_time time           gc               #>   <bch:expr>             <bch:tm> <bch:tm> <int> <dbl>   <bch:tm> <list>         <list>           #> 1 01-mlr3-terra-4-cores     2.44s    2.49s     3    35      7.45s <bench_tm [3]> <tibble [3 × 3]> #> 2 02-terra-4-cores         17.16s   17.22s     3    26      52.7s <bench_tm [3]> <tibble [3 × 3]> #> 3 03-mlr3-raster-4-cores    3.25s     3.5s     3    34     10.42s <bench_tm [3]> <tibble [3 × 3]> #> 4 04-raster-4-cores          8.3s    8.74s     3     1     25.94s <bench_tm [3]> <tibble [3 × 3]> library(ggplot2) autoplot(bm, type = \"ridge\") #> Loading required namespace: tidyr #> Picking joint bandwidth of 0.00863"},{"path":"https://mlr3spatial.mlr-org.com/articles/benchmark.html","id":"large-files","dir":"Articles","previous_headings":"","what":"Large files","title":"Benchmarking parallel predictions","text":"~ 25 Mio. values 485 MB disk","code":"# SpatRaster demo stack stack_terra = demo_stack_spatraster(500) value = data.table::data.table(ID = c(0, 1), y = c(\"negative\", \"positive\")) terra::setCats(stack_terra, layer = \"y\", value = value) colnames = names(stack_terra) file_terra = tempfile(\"terra\", fileext = \".tif\") terra::writeRaster(stack_terra, file_terra)  # RasterBrick demo stack stack_raster = demo_stack_rasterbrick(500) colnames_raster = names(stack_raster) file_raster = tempfile(\"raster\", fileext = \".tif\") raster::writeRaster(stack_raster, file_raster) #> Warning in .gd_SetProject(object, ...): NOT UPDATED FOR PROJ >= 6  # tasks stack_terra = terra::rast(file_terra) backend_terra = DataBackendRaster$new(stack_terra) task_terra = as_task_regr(backend_terra, target = \"x_1\")  stack_raster = raster::brick(file_raster) names(stack_raster) = colnames_raster backend_raster = DataBackendRaster$new(stack_raster) #> Warning in wkt(from): no wkt comment task_raster = as_task_regr(backend_raster, target = \"x_1\")  # Train learners set.seed(42) row_ids = sample(1:task_terra$nrow, 50)  learner_task_terra = lrn(\"regr.rpart\") learner_task_terra$parallel_predict = TRUE learner_task_terra$train(task_terra, row_ids = row_ids)  learner_task_raster = lrn(\"regr.rpart\") learner_task_terra$parallel_predict = TRUE learner_task_raster$train(task_raster, row_ids = row_ids)  # non-mlr3 models rpart_task_terra = rpart::rpart(x_1 ~ ., task_terra$data(rows = row_ids)) rpart_task_raster = rpart::rpart(x_1 ~ ., task_raster$data(rows = row_ids)) bm = bench::mark(    \"01-mlr3-terra-4-cores\" = {     plan(multicore, workers = 4)     predict_spatial(task_terra, learner_task_terra, chunksize = 2000L)   },    \"02-terra-4-cores\" = terra::predict(stack_terra, rpart_task_terra, cores = 4, cpkgs = \"rpart\"),    \"03-mlr3-raster-4-cores\" = {     plan(multicore, workers = 4)     predict_spatial(task_raster, learner_task_raster, chunksize = 2000L, format = \"raster\")   },    \"04-raster-4-cores\" = {     library(raster)     library(rpart)     beginCluster(4, type = \"PSOCK\")     clusterR(stack_raster, predict, args = list(model = rpart_task_raster))   },    check = FALSE, filter_gc = FALSE, min_iterations = 3,   max_iterations = 3, memory = FALSE)  bm$`itr/sec` = NULL bm$result = NULL bm$`gc/sec` = NULL bm$memory = NULL bm$mem_alloc = NULL  print(bm) #> # A tibble: 4 × 8 #>   expression                  min   median n_itr  n_gc total_time time           gc               #>   <bch:expr>             <bch:tm> <bch:tm> <int> <dbl>   <bch:tm> <list>         <list>           #> 1 01-mlr3-terra-4-cores    20.88s   21.55s     3   170      1.11m <bench_tm [3]> <tibble [3 × 3]> #> 2 02-terra-4-cores          1.44m    1.45m     3    27      4.37m <bench_tm [3]> <tibble [3 × 3]> #> 3 03-mlr3-raster-4-cores    30.5s   30.86s     3    38      1.62m <bench_tm [3]> <tibble [3 × 3]> #> 4 04-raster-4-cores         24.4s    28.1s     3     1      1.35m <bench_tm [3]> <tibble [3 × 3]> library(ggplot2) autoplot(bm, type = \"ridge\") #> Picking joint bandwidth of 0.0143"},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started","text":"{mlr3spatial} adds [mlr3::DataBackend]s spatial classes ([terra::SpatRaster], [raster::brick], [stars::stars]). package capable making predictions objects classes via predict_raster(). return spatial object class specified argument format. Essentially, {mlr3spatial} takes burden converting spatial objects plain data.table coercing predicted values back spatial object making sure loose spatial reference. goodies bag though: Thanks mlr3’s ability predict parallel learner, {mlr3spatial} predictions can also make use future-based parallelization speed predictions spatial objects. Often enough, spatial predictions quite large (millions values) efficient parallelization can save time . See vignette “Benchmarking parallel predictions” details. predict_raster() can executed chunks (argument chunksize), making possible execute predictions large raster files consumer grade machines. chunked execution comes overhead compared execution one block since prediction heuristic executed multiple times results need merged end. following, showcase step--step example handle multi-layer raster object package {stars}.","code":""},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"data-preparation","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object","what":"Data Preparation","title":"Getting started","text":"First, TIFF files read via stars::read_stars() put DataBackendRaster. DataBackend used create regression task response layer.1. large raster files millions values helps predict parallel. enable , set learner$parallel_predict = TRUE initiate parallel plan via {future}. Since example, parallelization enabled . use simple regression tree example learner. practice might want use different learner - can find overview available learners .","code":"library(\"mlr3\") library(\"mlr3spatial\") tif = system.file(\"tif/L7_ETMs.tif\", package = \"stars\") stack = stars::read_stars(tif)  backend = as_data_backend(stack) task = as_task_regr(backend, target = \"layer.1\")  print(task) #> <TaskRegr:backend> (122848 x 6) #> * Target: layer.1 #> * Properties: - #> * Features (5): #>   - dbl (5): layer.2, layer.3, layer.4, layer.5, layer.6 learner = lrn(\"regr.rpart\") set.seed(42) row_ids = sample(1:task$nrow, 500) learner$train(task, row_ids = row_ids)  print(learner) #> <LearnerRegrRpart:regr.rpart> #> * Model: rpart #> * Parameters: xval=0 #> * Packages: mlr3, rpart #> * Predict Type: response #> * Feature types: logical, integer, numeric, factor, ordered #> * Properties: importance, missings, selected_features, weights"},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"prediction","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object","what":"Prediction","title":"Getting started","text":"prediction predict_spatial() used. return raster file contains predictions. Users can select R spatial format returned raster . following, compare way conduct prediction using {mlr3spatial} “native” way fitting e1071::svm() model predicting terra::predict().","code":""},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"mlr3spatial","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object > Prediction","what":"mlr3spatial","title":"Getting started","text":"","code":"ras = predict_spatial(task, learner, format = \"stars\") names(ras) = \"cadmium\"  print(ras) #> stars object with 2 dimensions and 1 attribute #> attribute(s): #>             Min.  1st Qu.   Median     Mean 3rd Qu.     Max. #> cadmium  62.3629 70.30233 77.01695 79.05135 89.2809 118.1429 #> dimension(s): #>   from  to  offset delta                     refsys point values x/y #> x    1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE   NULL [x] #> y    1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE   NULL [y]"},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"stars","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object > Prediction","what":"stars","title":"Getting started","text":"Since layers merged {stars} object, one first need split convert regular data.table. Next, column names need adjusted match ones training data. Afterwards, data.frame generic predict() can called. Finally, predictions need injected stars object . (steps happening internally {mlr3spatial}).","code":"rpart_learner = rpart::rpart(layer.1 ~ ., data = task$data(rows = row_ids)) stars_stack = as.data.table(split(stack, \"band\")) stars_stack[, c(\"x\", \"y\", \"X1\")] = NULL colnames(stars_stack) = task$feature_names  stars_pred = predict(rpart_learner, stars_stack)  # subset stars object to one band only stars_pred_ras = stack[, , , 1] # rename the layer name names(stars_pred_ras) = \"pred\" # assign predictions stars_pred_ras$pred = stars_pred  print(stars_pred_ras) #> stars object with 3 dimensions and 1 attribute #> attribute(s): #>          Min.  1st Qu.   Median     Mean 3rd Qu.     Max. #> pred  62.3629 70.30233 77.01695 79.05135 89.2809 118.1429 #> dimension(s): #>      from  to  offset delta                     refsys point values x/y #> x       1 349  288776  28.5 SIRGAS 2000 / UTM zone 25S FALSE   NULL [x] #> y       1 352 9120761 -28.5 SIRGAS 2000 / UTM zone 25S FALSE   NULL [y] #> band    1   1      NA    NA                         NA    NA   NULL"},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"output-consistency","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object","what":"Output consistency","title":"Getting started","text":"Now executed two predictions, like verify actually identical.","code":"all.equal(as.numeric(stars_pred_ras$pred), as.numeric(ras$cadmium)) #> [1] TRUE"},{"path":"https://mlr3spatial.mlr-org.com/articles/mlr3spatial.html","id":"visualization","dir":"Articles","previous_headings":"Use Case - Landsat7 data as {stars} object","what":"Visualization","title":"Getting started","text":"Finally can plot predictions. color vector extract viridis color palette via dput(viridis::viridis_pal()(5)).","code":"plot(ras, col = c(\"#440154FF\", \"#443A83FF\", \"#31688EFF\", \"#21908CFF\", \"#35B779FF\", \"#8FD744FF\", \"#FDE725FF\"))"},{"path":"https://mlr3spatial.mlr-org.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marc Becker. Author, maintainer. Patrick Schratz. Author.","code":""},{"path":"https://mlr3spatial.mlr-org.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker M, Schratz P (2021). mlr3spatial: Support Spatial Objects Within 'mlr3' Ecosystem. https://mlr3spatial.mlr-org.com, https://github.com/mlr-org/mlr3spatial.","code":"@Manual{,   title = {mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem},   author = {Marc Becker and Patrick Schratz},   year = {2021},   note = {https://mlr3spatial.mlr-org.com, https://github.com/mlr-org/mlr3spatial}, }"},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/index.html","id":"package-scope","dir":"","previous_headings":"","what":"Package scope","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"handling (large) spatial objects ({terra}, {raster}, {stars}, {sf} ML error-prone time consuming task. Users often need extract “raw” values spatial objects (detaching spatial metadata), train model, predict recreate spatial object . addition, predictions large raster files (.e. multiple GB size) often leads memory issues consumer grade machines. {mlr3spatial} tries help Providing DataBackendRaster class {mlr3} able handle various spatial raster classes ({terra}, {raster}, {stars}) Providing DataBackendVector class {mlr3} able handle {sf} objects Support enhanced predictions spatial objects ({terra}, {raster}, {stars}, {sf}, optional parallelization memory awareness","code":""},{"path":"https://mlr3spatial.mlr-org.com/index.html","id":"spatiotemporal-resampling--cross-validation","dir":"","previous_headings":"","what":"Spatiotemporal resampling / cross-validation","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"spatiotemporal resampling within mlr3 see {mlr3spatiotempcv}.","code":""},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Support for Spatial Objects Within the mlr3 Ecosystem","text":"Getting Started Benchmarking parallel predictions","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for raster objects — DataBackendRaster","title":"DataBackend for raster objects — DataBackendRaster","text":"mlr3::DataBackend raster objects: raster::brick stars::st_as_stars terra::SpatRaster DataBackend can constructed using spatial objects listed . Internally terra used processing operations.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"read-mode","dir":"Reference","previous_headings":"","what":"Read mode","title":"DataBackend for raster objects — DataBackendRaster","text":"two different ways reading values performed internally: \"Block mode\" reads complete rows raster file subsets requested cells. mode faster \"cell mode\" complete raster file iterated . \"Cell mode\" reads individual cells. faster \"block mode\" cells sampled. \"Block mode\" activated $data(rows) used increasing integer sequence e.g. 200:300. single cell requested, \"cell mode\" used.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DataBackend for raster objects — DataBackendRaster","text":"mlr3::DataBackend -> DataBackendRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DataBackend for raster objects — DataBackendRaster","text":"compact_seq logical(1) TRUE, row ids natural sequence 1 nrow(data) (determined internally). case, row lookup uses faster positional indices instead equi joins.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for raster objects — DataBackendRaster","text":"rownames (integer()) Returns vector distinct row identifiers, .e. contents primary key column. colnames (character()) Returns vector column names. nrow (integer(1)) Number rows (observations). ncol (integer(1)) Number columns (variables). stack (SpatRaster) Raster stack.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for raster objects — DataBackendRaster","text":"mlr3::DataBackend$format() mlr3::DataBackend$print()","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for raster objects — DataBackendRaster","text":"DataBackendRaster$new() DataBackendRaster$data() DataBackendRaster$head() DataBackendRaster$distinct() DataBackendRaster$missings()","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for raster objects — DataBackendRaster","text":"Creates backend raster objects.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for raster objects — DataBackendRaster","text":"","code":"DataBackendRaster$new(data)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for raster objects — DataBackendRaster","text":"data (Spatial object) Supported objects: raster::brick stars::st_as_stars terra::SpatRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"DataBackend for raster objects — DataBackendRaster","text":"Returns slice raster specified format. Currently, supported formats \"data.table\". rows must addressed vector cells indices, columns must referred via layer names. Queries rows matching row id queries columns matching column name silently ignored. Rows guaranteed returned order rows, columns may returned arbitrary order. Duplicated row ids result duplicated rows, duplicated column names lead exception.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for raster objects — DataBackendRaster","text":"","code":"DataBackendRaster$data(rows, cols, data_format = \"data.table\")"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for raster objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names. data_format (character(1)) Desired data format. Currently \"data.table\" supported.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"DataBackend for raster objects — DataBackendRaster","text":"Retrieve first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for raster objects — DataBackendRaster","text":"","code":"DataBackendRaster$head(n = 6L)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for raster objects — DataBackendRaster","text":"n (integer(1)) Number rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for raster objects — DataBackendRaster","text":"data.table::data.table() first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"method-distinct-","dir":"Reference","previous_headings":"","what":"Method distinct()","title":"DataBackend for raster objects — DataBackendRaster","text":"Returns named list vectors distinct values column specified. na_rm TRUE, missing values removed returned vectors distinct values. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for raster objects — DataBackendRaster","text":"","code":"DataBackendRaster$distinct(rows, cols, na_rm = TRUE)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for raster objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names. na_rm logical(1) Whether remove NAs .","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for raster objects — DataBackendRaster","text":"Named list() distinct values.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"DataBackend for raster objects — DataBackendRaster","text":"Returns number missing values per column specified slice data. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for raster objects — DataBackendRaster","text":"","code":"DataBackendRaster$missings(rows, cols)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for raster objects — DataBackendRaster","text":"rows integer() Row indices. Row indices start 1 upper left corner raster, increase left right top bottom. last cell bottom right corner row index equals number cells raster. cols character() Column names.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendRaster.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for raster objects — DataBackendRaster","text":"Total missing values per column (named numeric()).","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":null,"dir":"Reference","previous_headings":"","what":"DataBackend for vector objects — DataBackendVector","title":"DataBackend for vector objects — DataBackendVector","text":"mlr3::DataBackend vector objects (package sf supported).","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"DataBackend for vector objects — DataBackendVector","text":"mlr3::DataBackend -> DataBackendVector","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DataBackend for vector objects — DataBackendVector","text":"compact_seq logical(1) TRUE, row ids natural sequence 1 nrow(data) (determined internally). case, row lookup uses faster positional indices instead equi joins.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"DataBackend for vector objects — DataBackendVector","text":"rownames (integer()) Returns vector distinct row identifiers, .e. contents primary key column. colnames (character()) Returns vector column names, including primary key column. nrow (integer(1)) Number rows (observations). ncol (integer(1)) Number columns (variables), including primary key column. geometry (integer(1)) Returns sf geometry.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"DataBackend for vector objects — DataBackendVector","text":"mlr3::DataBackend$format() mlr3::DataBackend$print()","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DataBackend for vector objects — DataBackendVector","text":"DataBackendVector$new() DataBackendVector$data() DataBackendVector$head() DataBackendVector$distinct() DataBackendVector$missings()","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DataBackend for vector objects — DataBackendVector","text":"Creates backend spatial vector objects.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for vector objects — DataBackendVector","text":"","code":"DataBackendVector$new(data, primary_key = NULL)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for vector objects — DataBackendVector","text":"data (sf) raster object. primary_key (character(1) | integer()) Name primary key column, integer vector row ids.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"method-data-","dir":"Reference","previous_headings":"","what":"Method data()","title":"DataBackend for vector objects — DataBackendVector","text":"Returns slice data specified format. Currently, supported formats \"data.table\" \"Matrix\". rows must addressed vector primary key values, columns must referred via column names. Queries rows matching row id queries columns matching column name silently ignored. Rows guaranteed returned order rows, columns may returned arbitrary order. Duplicated row ids result duplicated rows, duplicated column names lead exception.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for vector objects — DataBackendVector","text":"","code":"DataBackendVector$data(rows, cols, data_format = \"data.table\")"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for vector objects — DataBackendVector","text":"rows integer() Row indices. cols character() Column names. data_format (character(1)) Desired data format, e.g. \"data.table\" \"Matrix\".","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"method-head-","dir":"Reference","previous_headings":"","what":"Method head()","title":"DataBackend for vector objects — DataBackendVector","text":"Retrieve first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for vector objects — DataBackendVector","text":"","code":"DataBackendVector$head(n = 6L)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for vector objects — DataBackendVector","text":"n (integer(1)) Number rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for vector objects — DataBackendVector","text":"data.table::data.table() first n rows.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"method-distinct-","dir":"Reference","previous_headings":"","what":"Method distinct()","title":"DataBackend for vector objects — DataBackendVector","text":"Returns named list vectors distinct values column specified. na_rm TRUE, missing values removed returned vectors distinct values. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for vector objects — DataBackendVector","text":"","code":"DataBackendVector$distinct(rows, cols, na_rm = TRUE)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for vector objects — DataBackendVector","text":"rows integer() Row indices. cols character() Column names. na_rm logical(1) Whether remove NAs .","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for vector objects — DataBackendVector","text":"Named list() distinct values.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"method-missings-","dir":"Reference","previous_headings":"","what":"Method missings()","title":"DataBackend for vector objects — DataBackendVector","text":"Returns number missing values per column specified slice data. Non-existing rows columns silently ignored.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DataBackend for vector objects — DataBackendVector","text":"","code":"DataBackendVector$missings(rows, cols)"},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"DataBackend for vector objects — DataBackendVector","text":"rows integer() Row indices. cols character() Column names.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/DataBackendVector.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"DataBackend for vector objects — DataBackendVector","text":"Total missing values per column (named numeric()).","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/as_data_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to DataBackendRaster — as_data_backend.stars","title":"Coerce to DataBackendRaster — as_data_backend.stars","text":"Wraps DataBackend around spatial objects. Currently synonym DataBackendRaster$new() support coercing backends. Wraps DataBackend around spatial objects. Currently synonym DataBackendVector$new() support coercing backends.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/as_data_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to DataBackendRaster — as_data_backend.stars","text":"","code":"# S3 method for stars as_data_backend(data, primary_key = NULL, ...)  # S3 method for SpatRaster as_data_backend(data, primary_key = NULL, ...)  # S3 method for RasterBrick as_data_backend(data, primary_key = NULL, ...)  # S3 method for Raster as_data_backend(data, primary_key = NULL, ...)  # S3 method for sf as_data_backend(data, primary_key = NULL, ...)"},{"path":"https://mlr3spatial.mlr-org.com/reference/as_data_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to DataBackendRaster — as_data_backend.stars","text":"data (Spatial object) Supported objects: raster::brick stars::st_as_stars terra::SpatRaster primary_key (character(1) | integer()) Name primary key column, integer vector row ids. ... () used.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/as_data_backend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce to DataBackendRaster — as_data_backend.stars","text":"DataBackend. DataBackend.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/block_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Raster Into Chunks — block_size","title":"Split Raster Into Chunks — block_size","text":"Splits raster chunks.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/block_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Raster Into Chunks — block_size","text":"","code":"block_size(raster, chunksize)"},{"path":"https://mlr3spatial.mlr-org.com/reference/block_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Raster Into Chunks — block_size","text":"raster (terra::SpatRaster) Raster split chunks. chunksize [integer] chunksize determines many subparts prediction task split . value can roughly thought megabyte raster file disk. example, prediction 1 GB file carried chunksize = 100L, prediction happen 10 chunks. default chunksize = 1000L might good compromise speed memory usage. find running memory, reduce value.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Demo Raster — demo_raster","title":"Generate Demo Raster — demo_raster","text":"Generates square demo terra::SpatRaster","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Demo Raster — demo_raster","text":"","code":"demo_raster(dimension)"},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Demo Raster — demo_raster","text":"dimension (integer(1)) xy dimension raster","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_rasterbrick.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a demo 'raster::brick' — demo_stack_rasterbrick","title":"Generate a demo 'raster::brick' — demo_stack_rasterbrick","text":"Generates square demo raster::brick object options set size (disk) number layers.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_rasterbrick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a demo 'raster::brick' — demo_stack_rasterbrick","text":"","code":"demo_stack_rasterbrick(size = 50, layers = 5)"},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_rasterbrick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a demo 'raster::brick' — demo_stack_rasterbrick","text":"size [integer(1)] Size raster stack megabyte (disk space). layers [integer(1)] Number layers.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_rasterbrick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a demo 'raster::brick' — demo_stack_rasterbrick","text":"","code":"if (mlr3misc::require_namespaces(\"raster\", quietly = TRUE)) {   demo_stack_rasterbrick(size = 5, layers = 2) } #> class      : RasterBrick  #> dimensions : 790, 790, 624100, 2  (nrow, ncol, ncell, nlayers) #> resolution : 0.001265823, 0.001265823  (x, y) #> extent     : 0, 1, 0, 1  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      :       x_1,         y  #> min values : -4.336879,  0.000000  #> max values :  5.717847,  1.000000  #>"},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_spatraster.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a demo 'terra::SpatRaster' — demo_stack_spatraster","title":"Generate a demo 'terra::SpatRaster' — demo_stack_spatraster","text":"Generates square demo terra::SpatRaster object options set size (disk) number layers.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_spatraster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a demo 'terra::SpatRaster' — demo_stack_spatraster","text":"","code":"demo_stack_spatraster(size = 50, layers = 5)"},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_spatraster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a demo 'terra::SpatRaster' — demo_stack_spatraster","text":"size [integer(1)] Size raster stack megabyte (disk space). layers [integer(1)] Number layers.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/demo_stack_spatraster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a demo 'terra::SpatRaster' — demo_stack_spatraster","text":"","code":"demo_stack_spatraster(size = 5, layers = 2) #> class       : SpatRaster  #> dimensions  : 790, 790, 2  (nrow, ncol, nlyr) #> resolution  : 0.001265823, 0.001265823  (x, y) #> extent      : 0, 1, 0, 1  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84  #> sources     : filec6d559806b0c.tif   #>               filec6d5639345dd.tif   #> names       :       x_1,         y  #> min values  : -4.202037,  0.000000  #> max values  :  5.676066,  1.000000"},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Extends mlr3 ML framework methods spatial objects. Data storage prediction supported packages 'terra', 'raster' 'stars'.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"learn-mlr-","dir":"Reference","previous_headings":"","what":"Learn mlr3","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Book mlr3: https://mlr3book.mlr-org.com Use cases examples gallery: https://mlr3gallery.mlr-org.com Cheat Sheets: https://github.com/mlr-org/mlr3cheatsheets","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"mlr-extensions","dir":"Reference","previous_headings":"","what":"mlr3 extensions","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Preprocessing machine learning pipelines: mlr3pipelines Analysis benchmark experiments: mlr3benchmark classification regression tasks: mlr3data Connector OpenML: mlr3oml Solid selection good classification regression learners: mlr3learners Even learners: https://github.com/mlr-org/mlr3extralearners Tuning hyperparameters: mlr3tuning Hyperband tuner: mlr3hyperband Visualizations many mlr3 objects: mlr3viz Survival analysis probabilistic regression: mlr3proba Cluster analysis: mlr3cluster Feature selection filters: mlr3filters Feature selection wrappers: mlr3fselect Interface real (--memory) data bases: mlr3db Performance measures plain functions: mlr3measures","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"suggested-packages","dir":"Reference","previous_headings":"","what":"Suggested packages","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Parallelization framework: future Progress bars: progressr Encapsulated evaluation: evaluate, callr (external process)","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package Options","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"\"mlr3.debug\": set TRUE, parallelization via future disabled simplify debugging provide concise tracebacks. Note results computed debug mode enabled use different seeding mechanism reproducible. \"mlr3.allow_utf8_names\": set TRUE, checks feature names relaxed, allowing non-ascii characters column names. experimental temporal option pave way text analysis, likely removed future version package. analysis.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Becker M, Schratz P (2021). mlr3spatial: Support Spatial Objects Within 'mlr3' Ecosystem. https://mlr3spatial.mlr-org.com, https://github.com/mlr-org/mlr3spatial.","code":""},{"path":[]},{"path":"https://mlr3spatial.mlr-org.com/reference/mlr3spatial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3spatial: Support for Spatial Objects Within the 'mlr3' Ecosystem — mlr3spatial-package","text":"Maintainer: Marc Becker marcbecker@posteo.de (ORCID) Authors: Patrick Schratz patrick.schratz@gmail.com (ORCID)","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict on spatial objects with mlr3 learners — predict_spatial","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"function allows directly predict mlr3 learners various spatial objects (see section \"Supported Spatial Classes\"). returns mlr3::Prediction object (optionally) object used prediction.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"","code":"predict_spatial(   task,   learner,   chunksize = 200L,   format = \"terra\",   filename = NULL )"},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"task (Task). learner (Learner). chunksize [integer] chunksize determines many subparts prediction task split . value can roughly thought megabyte raster file disk. example, prediction 1 GB file carried chunksize = 100L, prediction happen 10 chunks. default chunksize = 1000L might good compromise speed memory usage. find running memory, reduce value. format [character] Output class resulting object. Accepted values \"raster\", \"stars\" \"terra\" input DataBackendRaster. Note choosing something else \"terra\", spatial object converted respective format might cause overhead runtime memory allocation. DataBackendVector, output class always sf::sf. filename [character] Path spatial object written .","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"Spatial object class given argument format.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"parallelizing prediction via future, plan \"multisession\" work due external pointers within spatial object. execution platform UNIX-based, plan(\"multicore\") recommended. Windows users, plan(future.callr::callr) might alternative.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/predict_spatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict on spatial objects with mlr3 learners — predict_spatial","text":"","code":"stack = demo_stack_spatraster(size = 1) value = data.table::data.table(ID = c(0, 1), y = c(\"negative\", \"positive\")) terra::setCats(stack, layer = \"y\", value = value)  # create backend backend = as_data_backend(stack) task = as_task_classif(backend, target = \"y\", positive = \"positive\") # train learner = lrn(\"classif.featureless\") learner$train(task, row_ids = sample(1:task$nrow, 50)) ras = predict_spatial(task, learner) ras #> class       : SpatRaster  #> dimensions  : 223, 223, 1  (nrow, ncol, nlyr) #> resolution  : 0.004484305, 0.004484305  (x, y) #> extent      : 0, 1, 0, 1  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84  #> source      : filec6d54cf4ddcc.tif  #> name        : lyr.1  #> min value   :     2  #> max value   :     2"},{"path":"https://mlr3spatial.mlr-org.com/reference/write_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a raster in chunks — write_raster","title":"Writes a raster in chunks — write_raster","text":"Writes square raster disk chunks. Internal helper function.","code":""},{"path":"https://mlr3spatial.mlr-org.com/reference/write_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a raster in chunks — write_raster","text":"","code":"write_raster(data)"},{"path":"https://mlr3spatial.mlr-org.com/reference/write_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a raster in chunks — write_raster","text":"data [SpatRaster]SpatRaster object.","code":""},{"path":"https://mlr3spatial.mlr-org.com/news/index.html","id":"mlr3spatial-010","dir":"Changelog","previous_headings":"","what":"mlr3spatial 0.1.0","title":"mlr3spatial 0.1.0","text":"CRAN release: 2021-11-16 initial release","code":""}]
